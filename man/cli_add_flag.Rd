% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_r_functions_wrapping_commandline_tools.R
\name{cli_add_flag}
\alias{cli_add_flag}
\title{Add flag}
\usage{
cli_add_flag(
  cli_arg_list,
  name,
  prefix,
  default = FALSE,
  help_message = "<no help message available>"
)
}
\arguments{
\item{cli_arg_list}{either an empty list object or one that has been produced through other \strong{cli_add} functions.}

\item{name}{name of argument/option. Does NOT need to match the commandline tools native option names (string)}

\item{prefix}{prefix of the argument/option. e.g. --verbose. This needs to match one of the commandline tools prefixes (string)}

\item{default}{what is the default value - should the flag be present/absent by default (boolean)}

\item{help_message}{description of what this argument/option does (string)}
}
\value{
cli_arg_list
}
\description{
Adds a flag to the cli_arg_list.
Here, a flag is defined as something like  \strong{base_command --verbose}
}
\examples{
\dontrun{
# Creates a function that wraps a commandline tool and writes it to the clipboard
list() |>
  cli_add_arg(name = "threads", prefix = "--threads") |>
  cli_add_flag(name = "d4", prefix = "--d4", default = FALSE) |>
  cli_add_pos(name = "prefix", required = TRUE) |>
  cli_add_pos(name = "bam_or_cram", required = TRUE) |>
  cli_param_list_to_function(base_command = "mosdepth", function_name = "run_mosdepth", tool_title = "Mosdepth", tool_description = "simple R wrapper")
}
}
